local detritus = require "detritus.list"
local positions = require "detritus.positions"
local frequency = 0.5
local max_detritus = 3
local spawned_detritus = {}

function spawn_detritus(position)
	position_id = math.random(table.getn(positions))

	if spawned_detritus[position_id] == false then
		position.x = positions[position_id][1]
		position.y = positions[position_id][2]
		position.z = 1
		spawned_detritus[position_id] = true

		return { position, position_id }
	else
		return spawn_detritus(position)
	end
end

function init(self)
	self.timer = 1 / frequency
	self.nb_detritus = 0
	-- "Randomise" random
	math.randomseed(os.time())
	math.random(); math.random(); math.random()

	for i = 1, table.getn(positions) do
		spawned_detritus[i] = false
	end
end

function update(self, dt)
	self.timer = self.timer - dt

	if self.timer <= 0 then
		if self.nb_detritus < max_detritus then
			self.timer = 1 / frequency

			local position = go.get_position()
			local p = spawn_detritus(position)

			self.d = math.random(table.getn(detritus))
			self.item = detritus[self.d]	
			local component = "#" .. self.item .. "_factory"
			--local new_detritus = factory.create(component, p[1], nil, { position_id = p[2], item = d })
			factory.create(component, p[1], nil, { position_id = p[2] })
			
			self.nb_detritus = self.nb_detritus + 1
			if self.nb_detritus == 3 then
				self.nb_detritus = 0
			end
		end
	end
end

function on_message(self, message_id, message)
	if message_id == hash("destroy_detritus") then
		spawned_detritus[message["position_id"]] = false
	end
end